// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8HMNFKnEv7gJ55SbTqvTiU
// Component: 40oQIk4rcZ
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_im_xbeanies.module.css"; // plasmic-import: 8HMNFKnEv7gJ55SbTqvTiU/projectcss
import sty from "./PlasmicBuyPage.module.css"; // plasmic-import: 40oQIk4rcZ/css
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: 6RdOQRrPg/icon

export const PlasmicBuyPage__VariantProps = new Array();

export const PlasmicBuyPage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBuyPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"landingPage"}
            data-plasmic-override={overrides.landingPage}
            className={classNames(projectcss.all, sty.landingPage)}
          >
            <div
              data-plasmic-name={"rectangle1"}
              data-plasmic-override={overrides.rectangle1}
              className={classNames(projectcss.all, sty.rectangle1)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__u3IYn
                )}
              >
                {"1010 N. Ashland, Chicago IL"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__keveM
                )}
              >
                {"Copyright Â© 2022 imnotArt, LLC. All Rights Reserved."}
              </div>

              <div
                data-plasmic-name={"imnotArt5"}
                data-plasmic-override={overrides.imnotArt5}
                className={classNames(projectcss.all, sty.imnotArt5)}
              />

              <Line1Icon
                data-plasmic-name={"svg"}
                data-plasmic-override={overrides.svg}
                className={classNames(projectcss.all, sty.svg)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__srJqh
                )}
              >
                <React.Fragment>
                  <React.Fragment>{"\n\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Claim your official <imnotArt> Beanie created for "}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700, color: "#5CC8DF" }}
                  >
                    {"ETHDenver 2023\n\n"}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {""}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                </React.Fragment>
              </div>

              <div
                data-plasmic-name={"claimForFreeButton"}
                data-plasmic-override={overrides.claimForFreeButton}
                className={classNames(projectcss.all, sty.claimForFreeButton)}
              >
                <div
                  data-plasmic-name={"rectangle8"}
                  data-plasmic-override={overrides.rectangle8}
                  className={classNames(projectcss.all, sty.rectangle8)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wHgMi
                  )}
                >
                  {"CLAIM FOR FREE"}
                </div>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wXnkd
                )}
              >
                {"Edition Size: 1/20"}
              </div>

              <div
                data-plasmic-name={"rectangle4"}
                data-plasmic-override={overrides.rectangle4}
                className={classNames(projectcss.all, sty.rectangle4)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u9I2X
                  )}
                >
                  {"IMAGE/VIDEO"}
                </div>
              </div>

              <div
                data-plasmic-name={"imnotArtEthdenverBeanie"}
                data-plasmic-override={overrides.imnotArtEthdenverBeanie}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.imnotArtEthdenverBeanie
                )}
              >
                {" <imnotART> \n\nETH DENVER BEANIE\n"}
              </div>

              <div
                data-plasmic-name={"imnotArt4"}
                data-plasmic-override={overrides.imnotArt4}
                className={classNames(projectcss.all, sty.imnotArt4)}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__klCNt
                )}
              >
                {"Verified"}
              </div>

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__pPnXv)}
                displayHeight={"22px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"27px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/im_xbeanies/images/greencheckjpeg.jpeg",
                  fullWidth: 360,
                  fullHeight: 360,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__sQxUp)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"151px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/im_xbeanies/images/ethDenverLogopng.png",
                  fullWidth: 1008,
                  fullHeight: 987,
                  aspectRatio: undefined
                }}
              />
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__enXV
              )}
            >
              {"\n\n"}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "landingPage",
    "rectangle1",
    "imnotArt5",
    "svg",
    "claimForFreeButton",
    "rectangle8",
    "rectangle4",
    "imnotArtEthdenverBeanie",
    "imnotArt4"
  ],

  landingPage: [
    "landingPage",
    "rectangle1",
    "imnotArt5",
    "svg",
    "claimForFreeButton",
    "rectangle8",
    "rectangle4",
    "imnotArtEthdenverBeanie",
    "imnotArt4"
  ],

  rectangle1: [
    "rectangle1",
    "imnotArt5",
    "svg",
    "claimForFreeButton",
    "rectangle8",
    "rectangle4",
    "imnotArtEthdenverBeanie",
    "imnotArt4"
  ],

  imnotArt5: ["imnotArt5"],
  svg: ["svg"],
  claimForFreeButton: ["claimForFreeButton", "rectangle8"],
  rectangle8: ["rectangle8"],
  rectangle4: ["rectangle4"],
  imnotArtEthdenverBeanie: ["imnotArtEthdenverBeanie"],
  imnotArt4: ["imnotArt4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicBuyPage__ArgProps,
          internalVariantPropNames: PlasmicBuyPage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicBuyPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBuyPage";
  } else {
    func.displayName = `PlasmicBuyPage.${nodeName}`;
  }
  return func;
}

export const PlasmicBuyPage = Object.assign(
  // Top-level PlasmicBuyPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    landingPage: makeNodeComponent("landingPage"),
    rectangle1: makeNodeComponent("rectangle1"),
    imnotArt5: makeNodeComponent("imnotArt5"),
    svg: makeNodeComponent("svg"),
    claimForFreeButton: makeNodeComponent("claimForFreeButton"),
    rectangle8: makeNodeComponent("rectangle8"),
    rectangle4: makeNodeComponent("rectangle4"),
    imnotArtEthdenverBeanie: makeNodeComponent("imnotArtEthdenverBeanie"),
    imnotArt4: makeNodeComponent("imnotArt4"),
    // Metadata about props expected for PlasmicBuyPage
    internalVariantProps: PlasmicBuyPage__VariantProps,
    internalArgProps: PlasmicBuyPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBuyPage;
/* prettier-ignore-end */
